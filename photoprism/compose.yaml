version: '3.5'

# Example Docker Compose config file for PhotoPrism (Linux / AMD64)
#
# Note:
# - Running PhotoPrism on a server with less than 4 GB of swap space or setting a memory/swap limit can cause unexpected
#   restarts ("crashes"), for example, when the indexer temporarily needs more memory to process large files.
# - If you install PhotoPrism on a public server outside your home network, please always run it behind a secure
#   HTTPS reverse proxy such as Traefik or Caddy. Your files and passwords will otherwise be transmitted
#   in clear text and can be intercepted by anyone, including your provider, hackers, and governments:
#   https://docs.photoprism.app/getting-started/proxies/traefik/
#
# Documentation : https://docs.photoprism.app/getting-started/docker-compose/
# Docker Hub URL: https://hub.docker.com/r/photoprism/photoprism/
#
# DOCKER COMPOSE COMMAND REFERENCE
# see https://docs.photoprism.app/getting-started/docker-compose/#command-line-interface
# --------------------------------------------------------------------------
# Start    | docker-compose up -d
# Stop     | docker-compose stop
# Update   | docker-compose pull
# Logs     | docker-compose logs --tail=25 -f
# Terminal | docker-compose exec photoprism bash
# Help     | docker-compose exec photoprism photoprism help
# Config   | docker-compose exec photoprism photoprism config
# Reset    | docker-compose exec photoprism photoprism reset
# Backup   | docker-compose exec photoprism photoprism backup -a -i
# Restore  | docker-compose exec photoprism photoprism restore -a -i
# Index    | docker-compose exec photoprism photoprism index
# Reindex  | docker-compose exec photoprism photoprism index -f
# Import   | docker-compose exec photoprism photoprism import
#
# To search originals for faces without a complete rescan:
# docker-compose exec photoprism photoprism faces index
#
# All commands may have to be prefixed with "sudo" when not running as root.
# This will point the home directory shortcut ~ to /root in volume mounts.

services:
  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    depends_on:
      - mariadb
    ## Don't enable automatic restarts until PhotoPrism has been properly configured and tested!
    ## If the service gets stuck in a restart loop, this points to a memory, filesystem, network, or database issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    networks:
      - ${NETWORK}
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    ports:
      - "${PHOTOPRISM_PORT}:2342" # HTTP port (host:container)
    environment:
      PHOTOPRISM_ADMIN_PASSWORD: "${PHOTOPRISM_ADMIN_PASSWORD}"          # INITIAL PASSWORD FOR "admin" USER, MINIMUM 8 CHARACTERS
      PHOTOPRISM_AUTH_MODE: "${PHOTOPRISM_AUTH_MODE}"               # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "${PHOTOPRISM_SITE_URL}"  # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: ${PHOTOPRISM_ORIGINALS_LIMIT}               # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "${PHOTOPRISM_HTTP_COMPRESSION}"            # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "${PHOTOPRISM_LOG_LEVEL}"                   # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "${PHOTOPRISM_READONLY}"                   # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "${PHOTOPRISM_EXPERIMENTAL}"               # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "${PHOTOPRISM_DISABLE_CHOWN}"              # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "${PHOTOPRISM_DISABLE_WEBDAV}"             # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "${PHOTOPRISM_DISABLE_SETTINGS}"           # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "${PHOTOPRISM_DISABLE_TENSORFLOW}"         # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "${PHOTOPRISM_DISABLE_FACES}"              # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "${PHOTOPRISM_DISABLE_CLASSIFICATION}"     # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "${PHOTOPRISM_DISABLE_RAW}"                # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "${PHOTOPRISM_RAW_PRESETS}"                # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: ${PHOTOPRISM_JPEG_QUALITY}                    # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "${PHOTOPRISM_DETECT_NSFW}"                # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "${PHOTOPRISM_UPLOAD_NSFW}"                 # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "${PHOTOPRISM_DATABASE_DRIVER}"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "${PHOTOPRISM_DATABASE_DRIVER}"            # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "${PHOTOPRISM_DATABASE_SERVER}"         # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "${PHOTOPRISM_DATABASE_NAME}"             # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "${PHOTOPRISM_DATABASE_USER}"             # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "${PHOTOPRISM_DATABASE_PASSWORD}"         # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "${PHOTOPRISM_SITE_CAPTION}"
      PHOTOPRISM_SITE_DESCRIPTION: "${PHOTOPRISM_SITE_DESCRIPTION}"               # meta site description
      PHOTOPRISM_SITE_AUTHOR: "${PHOTOPRISM_SITE_AUTHOR}"                    # meta site author
      ## Run/install on first startup (options: update gpu tensorflow davfs clitools clean):
      # PHOTOPRISM_INIT: "${PHOTOPRISM_INIT}"
      ## Hardware Video Transcoding (for sponsors only due to high maintenance and support costs):
      # PHOTOPRISM_FFMPEG_ENCODER: "${PHOTOPRISM_FFMPEG_ENCODER}"        # FFmpeg encoder ("software", "intel", "nvidia", "apple", "raspberry")
      # PHOTOPRISM_FFMPEG_BITRATE: "${PHOTOPRISM_FFMPEG_BITRATE}"          # FFmpeg encoding bitrate limit in Mbit/s (default: 50)
      ## Run as a non-root user after initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
      # PHOTOPRISM_UID: ${PHOTOPRISM_UID}
      # PHOTOPRISM_GID: ${PHOTOPRISM_GID}
      # PHOTOPRISM_UMASK: ${PHOTOPRISM_UMASK}
    ## Start as non-root user before initialization (supported: 0, 33, 50-99, 500-600, and 900-1200):
    # user: "${PHOTOPRISM_USER}"
    ## Share hardware devices with FFmpeg and TensorFlow (optional):
    # devices:
    #  - "${PHOTOPRISM_DEVICES}"
    working_dir: "${PHOTOPRISM_WORKING_DIR}" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      # "${PHOTOPRISM_VOLUMES}"                # Example
      - "${PHOTOPRISM_VOLUMES_1}" # Original media files (DO NOT REMOVE)
      # - "${PHOTOPRISM_VOLUMES_2}" # *Additional* media folders can be mounted like this
      # - "${PHOTOPRISM_VOLUMES_3}" # *Optional* base folder from which files can be imported to originals
      - "${PHOTOPRISM_VOLUMES_4}" # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)

  ## Database Server (recommended)
  ## see https://docs.photoprism.app/getting-started/faq/#should-i-use-sqlite-mariadb-or-mysql
  mariadb:
    ## If MariaDB gets stuck in a restart loop, this points to a memory or filesystem issue:
    ## https://docs.photoprism.app/getting-started/troubleshooting/#fatal-server-errors
    restart: unless-stopped
    image: mariadb:10.8
    networks:
      - ${NETWORK}
    security_opt: # see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
      - seccomp:unconfined
      - apparmor:unconfined
    command: mysqld --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
    ## Never store database files on an unreliable device such as a USB flash drive, an SD card, or a shared network folder:
    volumes:
      - "${MARIADB_VOLUMES}" # DO NOT REMOVE
    environment:
      MARIADB_AUTO_UPGRADE: "${MARIADB_AUTO_UPGRADE}"
      MARIADB_INITDB_SKIP_TZINFO: "${MARIADB_INITDB_SKIP_TZINFO}"
      MARIADB_DATABASE: "${MARIADB_DATABASE}"
      MARIADB_USER: "${MARIADB_USER}"
      MARIADB_PASSWORD: "${MARIADB_PASSWORD}"
      MARIADB_ROOT_PASSWORD: "${MARIADB_ROOT_PASSWORD}"

networks:
  ${NETWORK}:
    external: ${NETWORK_EXTERNAL}

  ## Watchtower upgrades services automatically (optional)
  ## see https://docs.photoprism.app/getting-started/updates/#watchtower
  #
  # watchtower:
  #   restart: unless-stopped
  #   image: containrrr/watchtower
  #   environment:
  #     WATCHTOWER_CLEANUP: "${WATCHTOWER_CLEANUP}"
  #     WATCHTOWER_POLL_INTERVAL: "${WATCHTOWER_POLL_INTERVAL}" # checks for updates every two hours
  #   volumes:
  #     - "${WATCHTOWER_VOLUMES}"
  #     - "${WATCHTOWER_VOLUMES_2}" # optional, for authentication if you have a Docker Hub account
